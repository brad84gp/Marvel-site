{"version":3,"sources":["Configure.js","NavBar/NavBar.js","LoadiingSymbol.js","APIInfo.js","Footer/Footer.js","Home/Home.js","Characters/CharacterReactContext.js","Characters/CharactersCard.js","Characters/CharacterSearch.js","Characters/Characters.js","IndividualCharacter/Series/SeriesComics.js","IndividualCharacter/Stories/Stories.js","IndividualCharacter/IndividualCharacter.js","IndividualCharacter/Comics/ComicPopUp.js","IndividualCharacter/Series/SeriesInfo.js","App.js","ReduxStore/Redux.js","index.js"],"names":["module","exports","publicKey","privateKey","NavBar","useState","isOpen","setIsOpen","color","dark","expand","md","lg","xs","style","margin","textAlign","borderBottom","href","fontSize","onClick","navbar","id","LoadingSymbol","className","axios","require","md5","BASE_URL","ApiCalls","endpoint","query","method","console","log","debug","ts","Date","getTime","hash","url","headers","error","response","message","data","Array","isArray","num","Math","floor","random","this","request","res","results","offset","bool","char","res1","res2","res3","storyId","Footer","target","Home","characterList","setCharacterList","useLayoutEffect","a","setUpHomePage","search","Images","el","imgSrc","thumbnail","path","extension","src","map","marginTop","CharacterContext","React","createContext","CharacterCard","comics","name","series","stories","urls","characterInfo","inverse","width","height","alt","tag","Search","searchName","setSearchName","setTrueORfalse","useContext","getSpecificCharacter","serachCharacterName","UpdateDropdown","value","onChange","preventDefault","character","document","getElementById","boolValue","charValue","list","type","Characters","listCharacters","setListCharacters","setOffset","trueORfalse","getAllCharacters","dsiplayCharacters","sm","Provider","aria-label","position","display","justifyContent","first","previous","next","last","key","Series","format","characters","dates","description","image","prices","title","upc","issueNum","pageCount","history","useHistory","seriesComics","top","push","CharacterStories","i","length","index","slice","storyInfo","setStoryInfo","useEffect","getCharacterStories","getStories","originalIssue","IndividualCharacter","useParams","dispatch","useDispatch","useSelector","store","seriesInfo","comicInfo","findCharacterInformation","payload","getCharacters","CreateList","element","listStyle","available","issueNumber","items","resourceURI","marginLeft","ComicPopUp","ComicInfoCards","marginBottom","digitalId","modified","price","rel","SeriesInfo","SeriesInfoCards","Creator","role","startYear","endYear","rating","creators","App","exact","INTITIAL_STATE","ComicReducer","state","action","persistConfig","storage","persistedReducer","persistReducer","createStore","persistor","persistStore","ReactDOM","render","loading"],"mappings":"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","file":"static/js/main.e0d64dcc.chunk.js","sourcesContent":["\r\nconst publicKey = 'e5d473050b2edb6b37ff102e9868fed9'\r\n\r\nconst privateKey = 'c3d3d5ab05026f6490d27cc60eb95130f0aed045'\r\n\r\n\r\n\r\nmodule.exports = {\r\n    publicKey,\r\n    privateKey\r\n}","import React, { useState } from 'react';\r\nimport './NavBar.css'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nconst NavBar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        \r\n        <Col md={1} lg={2}></Col>\r\n            <Col xs={12} md={10} lg={8} style={{margin : ' 2em auto', textAlign : 'center'}}>\r\n\r\n                <Row style={{borderBottom : '5px solid red'}}> \r\n                    <Col md={1} lg={2}></Col>\r\n                    <Col xs={12} md={10} lg={8}>\r\n                    <NavbarBrand href=\"/\" style={{fontSize : '35px'}}>Marveling at Marvel</NavbarBrand>\r\n                    </Col>\r\n                    <Col md={1} lg={2}></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <NavbarToggler onClick={toggle} />\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                    <Nav navbar style={{margin : 'auto', fontSize : '20px'}} >\r\n                        <NavItem>\r\n                            <NavLink href=\"/characters\" id=\"navitem-item\">Characters</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink href=\"/\" id=\"navitem-item\">Home</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    </Collapse>\r\n                </Row>\r\n            </Col>\r\n        <Col md={1} lg={2}></Col>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nimport './LoadingSymbol.css'\r\n\r\nconst LoadingSymbol = () => {\r\n\r\n    return (\r\n        <div className='loadingSymbol'>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSymbol","const axios = require(\"axios\")\r\n\r\nconst { publicKey, privateKey } = require('./Configure')\r\n\r\nconst md5 = require('js-md5')\r\n\r\n\r\n\r\nconst BASE_URL = 'http://gateway.marvel.com/v1/public'\r\n\r\n\r\nclass ApiCalls {\r\n\r\n    static async request(endpoint, query = '', method = 'get'){\r\n        console.log(endpoint, query, method)\r\n        console.debug(\"API Call:\", endpoint, method);\r\n\r\n        let ts = new Date().getTime();\r\n\r\n        let hash = md5( `${ts}` + `${privateKey}`  + `${publicKey}` )\r\n \r\n        try{\r\n            return await axios({\r\n                method: method,\r\n                url : `${BASE_URL}/${endpoint}?${query}&ts=${ts}&apikey=${publicKey}&hash=${hash}`,\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            })\r\n        }catch (err){\r\n            console.error(\"API Error:\", err.response);\r\n            let message = err.response.data.error.message;\r\n            throw Array.isArray(message) ? message : [message];\r\n        }\r\n    }\r\n\r\n    static async setUpHomePage(){\r\n\r\n        let num = Math.floor(Math.random() * (1559 - 1 + 1) + 1)\r\n\r\n        \r\n        let res = await this.request('characters', `offset=${num}`)\r\n        return (res.data.data.results)\r\n    \r\n    }\r\n\r\n    static async getAllCharacters(offset, bool = false, char){\r\n        if(bool == false){\r\n            let res = await this.request('characters', `offset=${offset}`)\r\n            return res.data.data.results\r\n        }else{\r\n            let res = await this.request('characters', `nameStartsWith=${char}`)\r\n            return res.data.data.results\r\n        }\r\n    }\r\n\r\n    static async getSpecificCharacter(char){\r\n        let res = await this.request('characters', `nameStartsWith=${char}`)\r\n        return res.data.data.results\r\n\r\n    }\r\n\r\n    static async findCharacterInformation(id){\r\n        // Basic character info\r\n        let res1 = await this.request(`characters/${id}`)\r\n        let res2 = await this.request(`characters/${id}/series`)\r\n        let res3 = await this.request(`characters/${id}/comics`)\r\n\r\n        return [{ 'character' : res1.data.data.results, 'seriesInfo' : res2.data.data.results, 'comicInfo' : res3.data.data.results}]        \r\n    }\r\n\r\n    static async getCharacterStories(storyId){\r\n        let res = await this.request(`stories/${storyId}`)\r\n        return res.data.data.results\r\n    }\r\n\r\n}\r\n\r\nexport default ApiCalls","import React from 'react'\r\n\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"footerDiv\">\r\n            <div className=\"footerInfo\">\r\n                <ul>\r\n                    <li>All API information was retrieved from <a href=\"http://developer.marvel.com\" target=\"_blank\">http://developer.marvel.com</a></li>\r\n                    <li>All Icons were retrieved from <a href=\"https://icons8.com/icon/26190/scroll-up\">Scroll Up icon by Icons8</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useLayoutEffect, useState } from 'react'\r\n\r\n\r\nimport LoadingSymbol from '../LoadiingSymbol'\r\nimport './Home.css'\r\n\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nimport ApiCalls from '../APIInfo'\r\nimport Footer from '../Footer/Footer'\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [characterList, setCharacterList] = useState()\r\n\r\n    useLayoutEffect(() => {\r\n        async function search(){\r\n            let response = await ApiCalls.setUpHomePage()\r\n            setCharacterList(response)\r\n        }\r\n\r\n        search()\r\n    }, [])\r\n\r\n    console.log(characterList)\r\n\r\n\r\n    const Images = ({el}) => {\r\n        let imgSrc = el.thumbnail.path + '.' + el.thumbnail.extension\r\n        console.log(el.thumbnail.path)\r\n        if(el.thumbnail.path != 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available') return <img src={imgSrc} id='characterImages' ></img>\r\n        return null\r\n            \r\n    }\r\n    \r\n\r\n    if(!characterList) return <LoadingSymbol />\r\n\r\n    return (\r\n        <div className='homeDiv'>\r\n            <Row className='imagesRow' >\r\n                <Col >\r\n                    {characterList.map(el => {\r\n                        return <Images el={el} />\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n            <Row style={{marginTop : '-8em'}}>\r\n                <Footer />\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst CharacterContext = React.createContext()\r\n\r\nexport default CharacterContext","import React, { useState } from 'react'\r\n\r\nimport { Card, CardTitle, CardImg, CardImgOverlay } from 'reactstrap';\r\n\r\nimport './CharacterCards.css'\r\n\r\n\r\nconst CharacterCard = ({id, comics, name, series, stories, thumbnail, urls}) => {\r\n\r\n\r\n    const [characterInfo, setCharacterInfo] = useState({\r\n        id : id,\r\n        href : `/characters/${id}`,\r\n        comics : comics,\r\n        name : name,\r\n        series : series,\r\n        stories : stories,\r\n        thumbnail : thumbnail,\r\n        urls : urls\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className='characterDiv'>\r\n            <a href={characterInfo.href}>\r\n                <Card inverse className='characterCards'>\r\n                    <CardImg width=\"100%\" height=\"100%\" src={characterInfo.thumbnail} alt=\"Card image cap\" />\r\n                    <CardImgOverlay>\r\n                        <CardTitle tag=\"h1\" id=\"characterName\">{characterInfo.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Card>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCard","import React, { useLayoutEffect, useState, useContext } from 'react'\r\n\r\nimport { Button, Form, Input, InputGroup } from 'reactstrap'\r\n\r\nimport CharacterContext from './CharacterReactContext'\r\n\r\nimport ApiCalls from '../APIInfo'\r\n\r\nconst Search = () => {\r\n\r\n    const [searchName, setSearchName] = useState()\r\n\r\n    const [characterList, setCharacterList] = useState()\r\n\r\n    const {setTrueORfalse} = useContext(CharacterContext);\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        if(searchName){\r\n            async function serachCharacterName(){\r\n                let res = await ApiCalls.getSpecificCharacter(searchName)\r\n                setCharacterList(res)\r\n            }\r\n            serachCharacterName()\r\n        }\r\n    }, [searchName])\r\n\r\n    function searchCharacters(el){\r\n        el.preventDefault()\r\n        let character = document.getElementById('characterSearch')\r\n        if(character.value == '') {\r\n            return null\r\n        }else{\r\n            setSearchName(character.value)\r\n            setTrueORfalse({\r\n                boolValue : true,\r\n                charValue : character.value\r\n            })\r\n        }\r\n    }\r\n\r\n    const UpdateDropdown = ({char, id}) => {\r\n        return <option value={char} id={id} />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form onChange={searchCharacters}>\r\n                <InputGroup >\r\n                    <Input id=\"characterSearch\" list='characterDropdown' name='characterDropdown'/>\r\n                    {characterList ? (\r\n                        <datalist id=\"characterDropdown\" style={{width : '100px'}}>\r\n                            {characterList.map(el => (\r\n                                <UpdateDropdown char={el.name} id={el.id} />\r\n                            ))}\r\n                        </datalist>\r\n                    ) : null}\r\n                    <Button color=\"secondary\" type=\"submit\" >Search Characters</Button>\r\n                    \r\n                </InputGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useLayoutEffect, useState } from 'react'\r\nimport {  CardGroup, Col,  Pagination, PaginationItem, PaginationLink, Row } from 'reactstrap'\r\n\r\nimport CharacterContext from './CharacterReactContext'\r\n\r\nimport ApiCalls from '../APIInfo'\r\nimport LoadingSymbol from '../LoadiingSymbol'\r\nimport CharacterCard from './CharactersCard'\r\nimport Search from './CharacterSearch'\r\nimport Footer from '../Footer/Footer'\r\n\r\n\r\nconst Characters = () => {\r\n\r\n    const [listCharacters, setListCharacters] = useState()\r\n\r\n    const [offset, setOffset] = useState(0)\r\n\r\n    const [trueORfalse, setTrueORfalse] = useState({\r\n        boolValue : false,\r\n        charValue : ''\r\n    })\r\n\r\n    useLayoutEffect(() => {\r\n        async function dsiplayCharacters(){\r\n            if(trueORfalse.boolValue == false){\r\n                let res = await ApiCalls.getAllCharacters(offset)\r\n                setListCharacters(res)\r\n            }else{\r\n                let res = await ApiCalls.getAllCharacters(offset, trueORfalse.boolValue, trueORfalse.charValue)\r\n                setListCharacters(res)\r\n            }\r\n        }\r\n        dsiplayCharacters()\r\n    }, [offset, trueORfalse])\r\n\r\n\r\n    function firstPage(){\r\n        setOffset(0)\r\n    }\r\n\r\n    function previousPage(){\r\n        if(offset == 0) return null\r\n        setOffset(offset - 20)\r\n    }\r\n\r\n    function nextPage(){\r\n        if(offset > 1513) return null\r\n        setOffset(offset + 20)\r\n    }\r\n\r\n    function lastPage(){\r\n        setOffset(1514)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n             <Row style={{marginTop : '2%'}}>\r\n                <Col md={2} lg={1}></Col>\r\n\r\n                <Col sm={12} md={8} lg={10}>\r\n                    <CharacterContext.Provider value={{setTrueORfalse}}>\r\n                        <Search />\r\n                    </CharacterContext.Provider>\r\n                    <br></br>\r\n                    <Pagination aria-label=\"Page naviagtion\" style={{position : 'relative', display : 'flex', justifyContent : ' center'}}>\r\n                        <PaginationItem>\r\n                            <PaginationLink first href=\"\" onClick={firstPage}/>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink previous href=\"\" onClick={previousPage}/>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink next href=\"#\" onClick={nextPage}/>\r\n                        </PaginationItem>\r\n                        <PaginationItem>\r\n                            <PaginationLink last href=\"#\"onClick={lastPage} />\r\n                        </PaginationItem>\r\n                    </Pagination>\r\n                    \r\n                </Col>\r\n\r\n                <Col md={2} lg={1}></Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col md={2} lg={1}></Col>\r\n\r\n                <Col sm={12} md={8} lg={10}>\r\n                    <Row>\r\n                    {listCharacters ? (\r\n                            <CardGroup>\r\n                                {listCharacters.map(el => (\r\n                                    <CharacterCard \r\n                                        key={el.id}\r\n                                        id={el.id}\r\n                                        comics={el.comics}\r\n                                        name={el.name}\r\n                                        series={el.series}\r\n                                        stories={el.stories}\r\n                                        thumbnail={el.thumbnail.path + '.' + el.thumbnail.extension}\r\n                                        urls={el.urls}\r\n                                    />\r\n                                ))}\r\n                            </CardGroup>\r\n                    ) : <LoadingSymbol />}\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col md={2} lg={1}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Footer />\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters","import React, { useState } from 'react'\r\nimport {  Route, useHistory } from 'react-router';\r\n\r\nimport {\r\n    Card, Button, CardImg, CardTitle, CardText,\r\n    CardSubtitle, CardBody\r\n  } from 'reactstrap';\r\n\r\n\r\n\r\nconst Series = ({format, id, characters, dates = null, description, image, prices = null, title, upc = null, issueNum = null, pageCount = null}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [seriesComics, setSeriesComics] = useState({\r\n        id : id,\r\n        format : format,\r\n        characters : characters, \r\n        dates : dates,\r\n        description : description,\r\n        image : image,\r\n        prices : prices,\r\n        title : title,\r\n        upc : upc,\r\n        issueNum : issueNum,\r\n        pageCount : pageCount\r\n    })\r\n\r\n    function renderComic(){\r\n        history.push(\"/ComicPopUp\")\r\n    }\r\n\r\n    function renderSeries(){\r\n        history.push(`/SeriesPopUp`)\r\n    }\r\n\r\n \r\n\r\n\r\n    if(seriesComics.format == 'series'){\r\n        return (        \r\n            <Card className=\"seriesCard\" id={seriesComics.id}>\r\n            <CardImg top width=\"100%\" src={seriesComics.image} alt=\"Card image cap\" />\r\n            <CardBody className=\"cardBody\">\r\n                <CardTitle tag=\"h5\" >{seriesComics.title}</CardTitle>\r\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\" >Series</CardSubtitle>\r\n                <CardText >{seriesComics.description}</CardText>\r\n                <Button onClick={renderSeries}>View More</Button>\r\n            </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    if(seriesComics.format == 'comics'){\r\n        return (     \r\n            <Card className=\"ComicCard\">\r\n            <CardImg top width=\"100%\" src={seriesComics.image} alt=\"Card image cap\" />\r\n            <CardBody className=\"cardBody\">\r\n                <CardTitle tag=\"h5\" >{seriesComics.title}</CardTitle>\r\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\" >Comic</CardSubtitle>\r\n                <CardText >{seriesComics.description}</CardText>\r\n                <Button onClick={renderComic}>View More</Button>\r\n            </CardBody>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Series\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Stories.css'\r\nimport ApiCalls from '../../APIInfo'\r\n\r\nimport {\r\n    Card, CardTitle, \r\n    CardSubtitle, CardBody\r\n  } from 'reactstrap';\r\n\r\nconst CharacterStories = ({ storyId }) => {\r\n\r\n    let id = ''\r\n\r\n    for(let i = storyId.length - 1; i>0 ; i--){\r\n        if(storyId[i] == '/'){\r\n            let index = i + 1\r\n            id = storyId.slice(index)\r\n            break\r\n        }\r\n    }\r\n\r\n    const [storyInfo, setStoryInfo] = useState({\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function getStories(id){\r\n            let response = await ApiCalls.getCharacterStories(id)\r\n            setStoryInfo(response)\r\n        }\r\n\r\n        getStories(id)\r\n    }, [])\r\n\r\n   \r\n    if(!storyInfo[0]) return null\r\n    return (\r\n        <div className=\"storyDiv\">\r\n            <Card className=\"storyCard\" >\r\n            <CardBody className=\"cardBody\">\r\n                <CardTitle tag=\"h5\" >Title : {storyInfo[0].title}</CardTitle>\r\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\" >Original Issue : {storyInfo[0].originalIssue.name}</CardSubtitle>\r\n            </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterStories","import React, {  useEffect,  useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  Col, Row } from 'reactstrap'\r\n\r\nimport './IndividualCharacter.css'\r\n\r\nimport ApiCalls from '../APIInfo'\r\nimport LoadingSymbol from '../LoadiingSymbol'\r\nimport Series_Comics from './Series/SeriesComics'\r\nimport Footer from '../Footer/Footer'\r\nimport CharacterStories from './Stories/Stories'\r\n\r\n\r\n\r\nconst IndividualCharacter = () => {\r\n    \r\n    let { id } = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    let characterInfo = useSelector(store => store.characterInfo)\r\n\r\n    let { character, seriesInfo, comicInfo } = characterInfo\r\n\r\n    useEffect(() => {\r\n        async function getCharacters(){\r\n            let response = await ApiCalls.findCharacterInformation(id)\r\n            dispatch({ type : 'NEW_CHARACTER', payload : response})\r\n        }\r\n        getCharacters()\r\n    }, [])\r\n\r\n    console.log(characterInfo)\r\n    \r\n   const CreateList = ({element}) => {\r\n        return <li style={{listStyle : 'none'}}><a href={element.url} target=\"_blank\" id=\"urlAnchor\">{element.type}</a></li>\r\n   }\r\n\r\n\r\n    if(!character) return <LoadingSymbol />\r\n    return (\r\n        <div>\r\n            <Row style={{height : '100vh', marginTop : '2em'}}>\r\n\r\n                <Col md={2} lg={1}></Col>\r\n\r\n\r\n                <Col sm={12} md={8} lg={10} className=\"pageColumn\">\r\n                    <Row>\r\n\r\n                        <Col sm={12} md={2}>\r\n                            <div className=\"stickyDiv\">\r\n                                <img src={characterInfo.character[0].thumbnail.path + '.' + characterInfo.character[0].thumbnail.extension} id='comicImage'/>\r\n                                <div id=\"characterInfo\">\r\n                                    <h3>{characterInfo.character[0].name}</h3>\r\n                                    <h5>Total Comics : {characterInfo.character[0].comics.available}</h5>\r\n                                    <h5>Total Series : {characterInfo.character[0].series.available}</h5>\r\n                                    <h5>Total Stories : {characterInfo.character[0].stories.available}</h5>\r\n                                    <h5>Related URLS</h5>\r\n                                    <ul>\r\n                                        {characterInfo.character[0].urls.map(element => {\r\n                                            return <CreateList element={element} />\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col md={3}></Col>\r\n\r\n                        <Col md={6}>\r\n                            <Row>\r\n                            <h1 id=\"seriesTitle\"><u>Character Series</u></h1>\r\n                                {seriesInfo ? (\r\n                                    <div className=\"seriesCardDeck\">\r\n                                            {seriesInfo.map(el => (\r\n                                                <Series_Comics\r\n                                                    key={el.id}\r\n                                                    format='series'\r\n                                                    id={el.id}\r\n                                                    characters={el.characters} \r\n                                                    dates={el.dates}\r\n                                                    description={el.description}\r\n                                                    image={el.thumbnail.path + '.' + el.thumbnail.extension}\r\n                                                    prices={el.prices}\r\n                                                    title={el.title}\r\n                                                    upc={el.prices}\r\n                                                    issueNum={el.issueNumber}\r\n                                                    pageCount={el.pageCount}\r\n                                                />\r\n                                            ))}\r\n                                    </div>\r\n                                ) : null}\r\n                            </Row>\r\n\r\n                            <Row style={{marginTop : '5em'}}>\r\n                                <h1 id=\"comicsTitle\"><u>Character Comics</u></h1>\r\n                                {comicInfo ? (\r\n                                    <div className=\"ComicsCardDeck\">\r\n                                            {comicInfo.map(el => (\r\n                                                <Series_Comics\r\n                                                    key={el.id}\r\n                                                    format='comics'\r\n                                                    id={el.id}\r\n                                                    characters={el.characters} \r\n                                                    dates={el.dates}\r\n                                                    description={el.description}\r\n                                                    image={el.thumbnail.path + '.' + el.thumbnail.extension}\r\n                                                    prices={el.prices}\r\n                                                    title={el.title}\r\n                                                    upc={el.prices}\r\n                                                    issueNum={el.issueNumber}\r\n                                                    pageCount={el.pageCount}\r\n                                                />\r\n                                            ))}\r\n                                    </div>\r\n                                ) : null}\r\n                            </Row>\r\n\r\n                            <Row style={{marginTop : '5em'}}>\r\n                                <h1 id=\"storiesTitle\"><u>Character Stories</u></h1>\r\n                                {characterInfo ? (\r\n                                    <div className=\"ComicStoryCard\">\r\n                                            {characterInfo.character[0].stories.items.map(el => (\r\n                                                <CharacterStories storyId={el.resourceURI} />\r\n                                            ))}\r\n                                    </div>\r\n                                ) : null}\r\n                            </Row>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row style={{marginLeft : '-8.9em'}}>\r\n                        <Footer />\r\n                    </Row>\r\n                </Col>\r\n\r\n\r\n                <Col md={2} lg={1}></Col>\r\n\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default IndividualCharacter","import React, {useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, CardImg, Row, Col, Button, Collapse, CardSubtitle, CardTitle, CardBody } from 'reactstrap';\r\nimport Footer from \"../../Footer/Footer\";\r\nimport './ComicPopUp.css'\r\n\r\nconst ComicPopUp = () => {\r\n\r\n    const {comicInfo} = useSelector(store => store.characterInfo)\r\n\r\n    console.log(comicInfo)\r\n\r\n\r\n    const ComicInfoCards = ({el}) => {\r\n\r\n        const [isOpen, setIsOpen] = useState(false);\r\n\r\n        const toggle = () => setIsOpen(!isOpen);\r\n\r\n        return (\r\n            <Card inverse className=\"comicCardPopUp\">\r\n                <CardImg id=\"popUpImg\"  src={el.thumbnail.path + '.' + el.thumbnail.extension} alt=\"Card image cap\" />\r\n                <Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem', marginTop: '1rem' }}>\r\n                     See Details\r\n                </Button>\r\n                <Collapse isOpen={isOpen}>\r\n                    <Card style={{color:'black'}}>\r\n                        <CardTitle tag=\"h4\">Title: {el.title}</CardTitle>\r\n                        <CardSubtitle>UPC: {el.upc}</CardSubtitle>\r\n                        <CardSubtitle>Digital Id: {el.digitalId}</CardSubtitle>\r\n                        <br></br>\r\n                        <CardBody>\r\n                            <p>{el.description ? `\"${el.description}\"` : null}</p>\r\n                            <ul>\r\n                                <li>Issue Number: {el.issueNumber}</li>\r\n                                <li>Modified: {el.modified.slice(0, 10)}</li>\r\n                                <li>Prices\r\n                                    <ul>\r\n                                        {el.prices[0] ? <li>Print Price: ${el.prices[0].price}</li> : null}\r\n                                        {el.prices[1] ? <li>Digital Price: ${el.prices[1].price}</li> : null}\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </CardBody>\r\n                        <br></br>\r\n                        <ul>\r\n                            <li>\r\n                                <h5>Related Urls</h5>\r\n                                <ul style={{fontSize : '15px'}}>\r\n                                    {el.urls[0] ? <li><b>{el.urls[0].type}:</b> <a href={el.urls[0].url} target=\"_blank\" rel=\"noreferrer\">{el.urls[0].url}</a></li> : null}\r\n                                    {el.urls[1] ? <li><b>{el.urls[1].type}:</b> <a href={el.urls[1].url} target=\"_blank\" rel=\"noreferrer\">{el.urls[1].url}</a></li> : null}\r\n                                    {el.urls[2] ? <li><b>{el.urls[2].type}:</b> <a href={el.urls[2].url} target=\"_blank\" rel=\"noreferrer\">{el.urls[2].url}</a></li> : null}\r\n                                    {el.urls[3] ? <li><b>{el.urls[3].type}:</b> <a href={el.urls[3].url} target=\"_blank\" rel=\"noreferrer\">{el.urls[3].url}</a></li> : null}\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </Card>\r\n                </Collapse>\r\n            </Card>\r\n        )\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"comicPopUpDiv\">\r\n            <Row>\r\n                <Col md={2} lg={1}></Col>\r\n\r\n\r\n                <Col sm={12} md={8} lg={10}>\r\n                    <Row>\r\n                        {comicInfo ? (\r\n                            <>\r\n                                {comicInfo.map((el) => (\r\n                                    <ComicInfoCards el={el}/>\r\n                                ))}\r\n                            </>\r\n                        ) : null}\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n                <Col md={2} lg={1}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Footer />\r\n            </Row>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicPopUp","import React, { useState } from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, CardImg, Row, Col, Button, Collapse, CardSubtitle, CardTitle, CardBody } from 'reactstrap';\r\n\r\nimport './SeriesInfo.css'\r\nimport Footer from \"../../Footer/Footer\";\r\n\r\n\r\n\r\nconst SeriesInfo = () => {\r\n\r\n    const {seriesInfo} = useSelector(store => store.characterInfo)\r\n\r\n\r\n    const SeriesInfoCards = ({el}) => {\r\n\r\n        const [isOpen, setIsOpen] = useState(false);\r\n\r\n        const toggle = () => setIsOpen(!isOpen);\r\n\r\n        const Creator = ({el}) => {\r\n            return <li><b>name:</b> {el.name} <b>Role: </b> {el.role}</li>\r\n        }\r\n\r\n        return (\r\n            <Card inverse className=\"seriesInfoPopUp\" id={el.id}>\r\n                <CardImg id=\"popUpImg\" src={el.thumbnail.path + '.' + el.thumbnail.extension} alt=\"Card image cap\" />\r\n                <Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem', marginTop: '1rem' }}>\r\n                     See Details\r\n                </Button>\r\n                <Collapse isOpen={isOpen}>\r\n                    <Card style={{color:'black'}}>\r\n                        <CardTitle tag=\"h4\">Title: {el.title}</CardTitle>\r\n                        <CardSubtitle>Start Year: {el.startYear}</CardSubtitle>\r\n                        <CardSubtitle>End Year: {el.endYear}</CardSubtitle>\r\n                        {el.rating ? <CardSubtitle>Rating: {el.rating}</CardSubtitle> : null}\r\n                        <br></br>\r\n                        <CardBody>\r\n                            <p>{el.description ? `\"${el.description}\"` : null}</p>\r\n                            <ul>\r\n                                <li>Modified: {el.modified.slice(0, 10)}</li>\r\n                                <li>Creators\r\n                                    \r\n                                    {el.creators.items ? (\r\n                                        <ul>\r\n                                            {el.creators.items.map(el => {\r\n                                               return <Creator el={el} />\r\n                                            })}\r\n                                        </ul>\r\n                                    ) : null}\r\n                                </li>\r\n                            </ul>\r\n                        </CardBody>\r\n                        <br></br>\r\n                        <ul>\r\n                            <li>\r\n                                <h5>Related Urls</h5>\r\n                                <ul style={{fontSize : '15px'}}>\r\n                                    {el.urls[0] ? <li><b>{el.urls[0].type}:</b> <a href={el.urls[0].url} target=\"_blank\"  rel=\"noreferrer\">{el.urls[0].url}</a></li> : null}\r\n                                    {el.urls[1] ? <li><b>{el.urls[1].type}:</b> <a href={el.urls[1].url} target=\"_blank\"  rel=\"noreferrer\">{el.urls[1].url}</a></li> : null}\r\n                                    {el.urls[2] ? <li><b>{el.urls[2].type}:</b> <a href={el.urls[2].url} target=\"_blank\"  rel=\"noreferrer\">{el.urls[2].url}</a></li> : null}\r\n                                    {el.urls[3] ? <li><b>{el.urls[3].type}:</b> <a href={el.urls[3].url} target=\"_blank\"  rel=\"noreferrer\">{el.urls[3].url}</a></li> : null}\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </Card>\r\n                </Collapse>\r\n            </Card>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"SeriesPopUpDiv\">\r\n            <Row>\r\n                <Col md={2} lg={1}></Col>\r\n\r\n\r\n                <Col sm={12} md={8} lg={10}>\r\n                    <Row>\r\n                        {seriesInfo ? (\r\n                            <>\r\n                                {seriesInfo.map((el) => (\r\n                                    <SeriesInfoCards el={el}/>\r\n                                ))}\r\n                            </>\r\n                        ) : null}\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n                <Col md={2} lg={1}></Col>\r\n            </Row>\r\n            <Row>\r\n                <Footer />\r\n            </Row>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeriesInfo","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n\nimport NavBar from \"./NavBar/NavBar\";\nimport Home from \"./Home/Home\";\nimport Characters from \"./Characters/Characters\";\nimport IndividualCharacter from \"./IndividualCharacter/IndividualCharacter\";\nimport ComicPopUp from \"./IndividualCharacter/Comics/ComicPopUp\";\nimport SeriesInfo from \"./IndividualCharacter/Series/SeriesInfo\";\nimport ErrorPage from \"./Error/ErrorPage\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <NavBar />\n\n        <Switch>\n\n          <Route exact path='/'>\n            <Home />\n          </Route>\n\n          <Route exact path='/characters'>\n            <Characters />\n          </Route>\n\n          <Route exact path='/characters/:id'>\n            <IndividualCharacter />\n          </Route>\n\n          <Route exact path=\"/ComicPopUP\">\n            <ComicPopUp />\n          </Route>\n\n          <Route exact path=\"/SeriesPopUp\">\n            <SeriesInfo />\n          </Route>\n\n          {/* <Route exact path=\"/404\">\n            <ErrorPage />\n          </Route> */}\n\n        </Switch>\n\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","\r\n\r\nconst INTITIAL_STATE = {\r\n    characterInfo : []\r\n}\r\n\r\nfunction ComicReducer(state=INTITIAL_STATE, action){\r\n    switch(action.type){\r\n        case 'NEW_CHARACTER' :\r\n            let res = action.payload\r\n            return {...state, characterInfo : state.characterInfo = res[0]}\r\n        case 'RESET_CHARACTER' : \r\n            return {INTITIAL_STATE}\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ComicReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport ComicReducer from './ReduxStore/Redux';\nimport {persistStore, persistReducer} from \"redux-persist\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from \"redux-persist/lib/storage\";\n\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, ComicReducer);\n\nconst store = createStore(persistedReducer)\n\nconst persistor = persistStore(store);\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}